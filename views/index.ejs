<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <title><%= title %></title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <link rel='stylesheet' href='/stylesheets/button.css' />
  <link rel='stylesheet' href='/stylesheets/camera.css' />
  <link rel='stylesheet' href='/stylesheets/coordinateGride.css' />
  <link rel='stylesheet' href='/stylesheets/metrics.css' />
  <script src="https://kit.fontawesome.com/63191989e5.js" crossorigin="anonymous"></script>

  <link rel="stylesheet" href="/stylesheets/rSlider.min.css">
</head>

<body>
  <div>
      <p style="position: absolute;left: 10px;top: 10px;background: none ;border: none;font-size: 2rem;margin: 0%">Cam Controller <i class="fas fa-eye"></i></p>
      <a href="/settings" style="
      position: absolute;
      right: 10px;
      top: 10px;
      background: none;
      border: none;
      font-size: 2rem;"><i class="fas fa-cog"></i></a>
  </div>
  <a style="text-decoration: none; padding: 1%;" href="/"><i class="fas fa-redo"></i> RELOAD
    PAGE</a>
  <div class="card card__actions" style="border-radius: 30px; margin: 1rem;">
    <p><b>Device Information: </b></p>
    
      <!-- https://sts.sci.uwo.ca/img/cisco/webex-board.png -->
      <%if (devices != undefined && devices.length > 0) {%>
      <% for (let device of devices) { %>
        <% if(codecId == device.id) {%>
          <% if(device.product.includes("Room")) {%>
          <img style="width: 50%"src="https://images.ctfassets.net/osq47g2esuw5/1MyBDbnUJ9DlMGPVR84kQY/bad4c892c377ccc345d9a2ed9f38cfa4/thumbnail_devices_room_kit_bars.png?w=500">
          <%}else if (device.product.includes("Board")){ %>
          <img style="width: 50%"src="https://sts.sci.uwo.ca/img/cisco/webex-board.png">
          <%} else {%>
            <img style="width: 50%"src="https://www.webex.com/content/dam/wbx/global/images/devices_3.png">
          <%}%>
          <p style="margin-top: 0%"><%= device.displayName%></p>
        <%}}%>
        <% if(deviceStatus == "OK") {%>
        <p>Status: Active <i style="color: #44e444" class="fas fa-circle"></i></p>
        <% }else{ %>
          <p>Status: Unactive <i style="color: red" class="fas fa-circle"></i></p>
        <% } %>
        <% } %>

    <form style="display: flex;flex-direction: column;" action="/setCodecId" method="post">
      <div>
        <label for="codecId" style="margin-right: 5px; font-weight: bold;">Choose another device</label>
        <select style="margin: 1%" name="codecId" id="codecId">
          <%if (devices != undefined && devices.length > 0) {%>
          <% for (let device of devices) { %>
          <% if(codecId == device.id) {%>
          <option value="<%=device.id%>" selected> <%=device.displayName%> </option>
          <%}else {%>
          <option value="<%=device.id%>"> <%=device.displayName%> </option>
          <% }}%>
          <% } %>
        </select>
      </div>
      <div>
        <input class="btn" type="submit" value="Change!">
      </div>
    </form>
  </div>
  <hr>

  <p>Control Cisco device's camera</p>


  <button class="little-button" id="change"><i class="fas fa-exchange-alt"></i></button>
  <article id="controller-container" class="card camera-item">
    <header class="card__header">
      <div class="card__content">
        <h2 class="camera__price" style="color: white">CONTROLLER</h2>
        <p class="camera__description"></p>
      </div>
    </header>

    <div style="display: none;
    flex-direction: column;
    align-items: center;">
      <div id="speedBar" class="slider-container" style="display: flex; flex-direction: column; display: none;">
        <label style="text-align: center">speed</label>
        <input type="range" min="1" max="15" step="1" onchange="setSpeed(this.value)" value="5">
      </div>
      <input type="hidden" id="speed" name="speed" value="5">
    </div>
    <!-- ------------------------------------------ -->
    <div id="control" style="display: flex;
      justify-content: center;
      flex-direction: column;
      border-radius: 1000px;
      border: 10px solid #4d4d4d;
      height: 284px;
      width: 88%;
      margin: 5%; display: none;">

      <div class="card__actions"><button id="up" class="button-up" data-ip=""><i
            class="fas fa-angle-double-up"></i></button></div>


      <div class="card__actions left-right-box">
        <button id="left" class="button-left" data-ip=""><i class="fas fa-angle-double-left"></i></button>
        <button id="button-center" class="plus-minus-button" data-ip=""><i class="far fa-dot-circle"></i></button>
        <button id="right" class="button-right" data-ip=""><i class="fas fa-angle-double-right"></i></button>
      </div>
      <div class="card__actions"><button id="down" class="button-down" data-ip=""><i
            class="fas fa-angle-double-down"></i></button></div>
    </div>
    <!-- ------------------------------------------ -->
    <div>
      <span id="coordinate"></span>
      <canvas id="canvas" width="412" height="284"></canvas>
    </div>

    <div style="text-align: center; font-weight: bold"><label>zoom</label></div>
    <div class="card__actions" style="padding-top: 0%">
      <button id="min" class="plus-minus-button"
        style="font-size:1rem; margin-right: 10%; font-weight: bold; color: #00AB50" data-ip="">MIN</button>
      <button id="zoom" class="plus-minus-button" style="display: none"><i class="far fa-plus-square"></i></button>
      <button id="dezoom" class="plus-minus-button" style="display: none"><i class="far fa-minus-square"></i></button>
      <input id="slider" style="direction: rtl; background: linear-gradient(to right, #82CFD0 0%, #82CFD0 70%, #fff 50%, #fff 100%);
      border: solid 1px #82CFD0;
      border-radius: 8px;
      height: 7px;
      outline: none;
      transition: background 450ms ease-in;
      -webkit-appearance: none;" type="range" min="0" max="11800" step="1" onchange="showVal(this.value)"
        value="11800">
      <button id="max" class="plus-minus-button" style="font-size:1rem; margin-left: 10%; font-weight: bold; color: #F7644A"
        data-ip="">MAX</button>
    </div>
    <div style="display: flex;
    flex-direction: column;
    align-items: center;">
      <div style="display: flex; flex-direction: column; width: 60%;">
      </div>
    </div>


  </article>
  <hr>
  <div style="width: 100%;
  text-align: center;">
    <form id="callWebexNumber" action="/call" method="POST">
      <label style="font-weight: bold;">Call Webex Number:</label>
      <input id="webexNumber" name="webexNumber" type="text" value="" required>
      <button id="startCallWebex" type="submit" value="startCallWebex" class="little-button"
        style="background-color: #42c542;"><i class="fas fa-phone-alt"></i></i></button>
      <button id="endCallWebex" type="submit" value="endCallWebex" class="little-button"
        style="background-color: #ff0000c9;" hidden><i class="fas fa-phone-slash"></i></button>
    </form>
  </div>




  <hr>



  <h2>Metrics</h2>

  <table>
    <caption>Last update at <b id="currentTime"></b> the <b id="currentDate"></b></caption>
    <thead>
     <tr>
      <td colspan="1"><a id="refresh-data" style="text-decoration: none; color: white" href="#"><i class="fas fa-redo"></i> Refresh Data</a></td>
      <th scope="col">Data category</th>
      <th scope="col">Unit</th>
     </tr>
    </thead>
    <tbody>
     <tr>
      <% if(metrics.roomAnalytics != undefined){%>
      <th style="background: #293649; color: white; text-align: center" rowspan="4" scope="rowgroup">Codec</th>
      <% if (metrics.roomAnalytics != undefined && metrics.roomAnalytics.PeoplePresence != undefined){ %>
      <th scope="row">Occupied</th>
      <td id="tdPeoplePresence"><%= metrics.roomAnalytics.PeoplePresence %></td>
      <% } %>
     </tr>
     <tr>
        <% if (metrics.roomAnalytics != undefined && metrics.roomAnalytics.PeopleCount != undefined){ %>
      <th scope="row">Occupants</th>
      <td id="tdPeopleCount"><%= metrics.roomAnalytics.PeopleCount.Current == -1 ? 0 : metrics.roomAnalytics.PeopleCount.Current %></td>
      <% } %>
     </tr>
     <tr>
      <% if (metrics.roomAnalytics != undefined && metrics.roomAnalytics.Sound != undefined){ %>
      <th scope="row">Sound Level (dBA)</th>
      <td id="tdSound"><%= metrics.roomAnalytics.Sound.Level.A %></td>
      <% } %>
     </tr>
     <tr>
      <% if (metrics.roomAnalytics != undefined && metrics.roomAnalytics.AmbientNoise != undefined){ %>
      <th scope="row">Ambient Noise (dBA)</th>
      <td id="tdAmbientNoise"><%= metrics.roomAnalytics.AmbientNoise.Level.A %></td>
    </tr>
      
      <% } } else {%>
        <th style="background: #293649; color: white; text-align: center" rowspan="4" scope="rowgroup">Codec</th>
        <th scope="row">Occupied</th>
        <td id="tdPeoplePresence">NO DATA</td>
       </tr>
       <tr>   
        <th scope="row">Occupants</th>
        <td id="tdPeopleCount">NO DATA</td>
       </tr>
       <tr>
        <th scope="row">Sound Level (dBA)</th>
        <td id="tdSound">NO DATA</td>
       </tr>
       <tr>
        <th scope="row">Ambient Noise (dBA)</th>
        <td id="tdAmbientNoise">NO DATA</td>
      </tr>
      <%}%>

     <tr>
      <% if(metrics.peripherals != undefined){%>
      <% var cpt = 0; %>
      <% for (let peripheral of metrics.peripherals) { %>
      <th style="background: #293649; color: white; text-align: center" rowspan="3" scope="rowgroup">Room Navigator</th>
      <th scope="row">Temperature (°C/°F)</th>
      <td id="tdAmbientTemperature<%=cpt%>"><%=peripheral.RoomAnalytics.AmbientTemperature%></td>
     </tr>
     <tr>
      <th scope="row">Relative Humidity (%)</th>
      <td id="tdRelativeHumidity<%=cpt%>"><%=peripheral.RoomAnalytics.RelativeHumidity%></td>
     </tr>

     <% if (peripheral.RoomAnalytics.AirQuality != undefined && peripheral.RoomAnalytics.AirQuality.Index != undefined){ %>
      <tr>
      <th scope="row">AirQuality (Index)</th>
      <td id="tdAirQuality<%=cpt%>"><%= peripheral.RoomAnalytics.AirQuality.Index %></td>
      </tr>
     <% } %>
     <% cpt++; %>
     <%} }%>
    </tbody>
  </table>

  <div class="card camera-item" style="padding: 2%">
      <div class="card-header">
        <h2>Codec's Metrics</h2>
      </div>
      <div class="card-body">
        <div class="metric-group">
          <div>
            <div id="PeoplePresenceContainer" class="metric">
              <% if (metrics.roomAnalytics != undefined && metrics.roomAnalytics.PeoplePresence != undefined){ %>
              <span class="icon "></span>
              <div id="PeoplePresence" class="metric-value"><span><%= metrics.roomAnalytics.PeoplePresence %></span></div>
              <div class="metric-description"><span class="text-nowrap">Occupied</span>
              <%} else {%>
                <span class="icon icon-error_20 icon-error"></span>
                <div id="PeoplePresence" class="metric-value metric-status-error"><span>-</span></div>
                <div class="metric-description"><span class="text-nowrap">Occupied</span>
              <%}%>
                <div></div>
              </div>
            </div>
          </div>
          <div>
            <div id="PeopleCountContainer" class="metric">
              <% if (metrics.roomAnalytics != undefined && metrics.roomAnalytics.PeopleCount != undefined){ %>
              <span class="icon "></span>
              <div id="PeopleCount" class="metric-value"><span><%= metrics.roomAnalytics.PeopleCount.Current == -1 ? 0 : metrics.roomAnalytics.PeopleCount.Current %></span></div>
              <div class="metric-description"><span class="text-nowrap">Occupants</span>
              <%} else {%>
                <span class="icon icon-error_20 icon-error"></span>
                <div id="PeopleCount" class="metric-value metric-status-error"><span>-</span></div>
                <div class="metric-description"><span class="text-nowrap">Occupants</span>
              <%}%>
                <div></div>
              </div>
            </div>
          </div>
          <div>
            <div id="SoundContainer" class="metric">
              <% if (metrics.roomAnalytics != undefined && metrics.roomAnalytics.Sound != undefined){ %>
              <div id="Sound" class="metric-value"><span><%= metrics.roomAnalytics.Sound.Level.A %></span></div>
              <div class="metric-description"><span class="text-nowrap">Sound Level (dBA)</span>
              <%} else {%>
                <span class="icon icon-error_20 icon-error"></span>
                <div id="Sound" class="metric-value metric-status-error"><span>-</span></div>
                <div class="metric-description"><span class="text-nowrap">Sound Level (dBA)</span>
              <%}%>
                <div></div>
              </div>
            </div>
          </div>
        </div>
        <div class="card-line"></div>
        <div class="metric-group mb-3">
          <div>
            <div id="AmbientNoiseContainer" class="metric">
              <% if (metrics.roomAnalytics != undefined && metrics.roomAnalytics.AmbientNoise != undefined){ %>
              <span class="icon icon-check-circle_20 icon-excellent"></span>
              <div id="AmbientNoise" class="metric-value metric-status-excellent"><span><%= metrics.roomAnalytics.AmbientNoise.Level.A %></span></div>
              <div class="metric-description"><span class="text-nowrap">Ambient Noise</span>
                <%} else {%>
                  <span class="icon icon-error_20 icon-error"></span>
                  <div id="AmbientNoise" class="metric-value metric-status-error"><span>-</span></div>
                  <div class="metric-description"><span class="text-nowrap">Ambient Noise</span>
                <%}%>
                <div>(dBA)</div>
              </div>
            </div>
          </div>
          <!-- <div>
            <div class="metric"><span class="icon icon-error_20 icon-error"></span>
              <div class="metric-value metric-status-error"><span>0/32</span></div>
              <div class="metric-description"><span class="text-nowrap">Temperature</span>
                <div>&nbsp;(°<span class="degrees">C</span>/°<span class="degrees">F</span>)</div>
                <div></div>
              </div>
            </div>
          </div>
          <div>
            <div class="metric"><span class="icon icon-error_20 icon-error"></span>
              <div class="metric-value metric-status-error"><span>–</span></div>
              <div class="metric-description"><span class="text-nowrap">Relative Humidity</span>
                <div>(%)</div>
              </div>
            </div>
          </div> -->
        </div>
      </div>
    </div>
  </div>




</body>
<script src="/javascripts/coordinateGride.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
  /*Initialize Date & Time Label*/
  $("#currentTime").text(new Date().toLocaleTimeString())
  $("#currentDate").text(new Date().toLocaleDateString())




  function showVal(newVal) {
    console.log(newVal)
    $.ajax({
      url: '/zoomForSlider/' + newVal,
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  }

  function setSpeed(newVal) {
    console.log(newVal)
    $("#speed").val(newVal);
  }

  c.onclick = (event) => {
    var rect = c.getBoundingClientRect();
    var x = event.clientX - rect.left;
    var y = event.clientY - rect.top;
    console.log(coordinate_indicator.innerHTML);
    drawCoordinates(x, y);
    const coordinates = coordinate_indicator.innerHTML.split(',');
    // console.log(coordinates);
    $.ajax({
      url: '/setPosition?pan=' + coordinates[0] + '&tilt=' + coordinates[1],
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  }

  $("#refresh-data").click(function(e){
    e.preventDefault()
    $.ajax({
      url: '/refreshRoomAnalytics',
      type: 'get',
      success: function (json) {
        $("#currentTime").text(new Date().toLocaleTimeString())
        $("#currentDate").text(new Date().toLocaleDateString())
        var data = JSON.parse(json);
        console.log(data)
        if(data == "error"){
          $("#PeoplePresence").html("-");
          $("#PeoplePresence").addClass("metric-status-error");
          $('span:first',"#PeoplePresenceContainer").removeClass().addClass("icon-error_20 icon-error");

          $("#PeopleCount").html("-");
          $("#PeopleCount").addClass("metric-status-error");
          $('span:first',"#PeopleCountContainer").removeClass().addClass("icon-error_20 icon-error");

          $("#Sound").html("-");
          $("#Sound").addClass("metric-status-error");   
          $('span:first',"#SoundContainer").find("span").removeClass().addClass("icon icon-error_20 icon-error");
            
          $("#AmbientNoise").html("-");
          $("#AmbientNoise").removeClass("metric-status-excellent").addClass("metric-status-error")
          $('span:first',"#AmbientNoiseContainer").removeClass().addClass("icon-error_20 icon-error");
          alert("ERROR: The device is probably off !")
        }
        else{
            $("#PeoplePresence").html(data.roomAnalytics.PeoplePresence);
            $("#PeoplePresence").removeClass("metric-status-error");
            $('span:first',"#PeoplePresenceContainer").removeClass();
            $("#tdPeoplePresence").text(data.roomAnalytics.PeoplePresence);

            $("#PeopleCount").html(data.roomAnalytics.PeopleCount.Current == -1 ? 0 : data.roomAnalytics.PeopleCount.Current.toString()) ;
            $("#PeopleCount").removeClass("metric-status-error");
            $('span:first',"#PeopleCountContainer").removeClass();
            $("#tdPeopleCount").text(data.roomAnalytics.PeopleCount.Current == -1 ? 0 : data.roomAnalytics.PeopleCount.Current.toString())

            $("#Sound").html(data.roomAnalytics.Sound.Level.A);
            $("#Sound").removeClass("metric-status-error");   
            $('span:first',"#SoundContainer").removeClass();
            $("#tdSound").text(data.roomAnalytics.Sound.Level.A);
            
            $("#AmbientNoise").html(data.roomAnalytics.AmbientNoise.Level.A);
            $("#AmbientNoise").removeClass("metric-status-error").addClass("metric-status-excellent");
            $('span:first',"#AmbientNoiseContainer").removeClass().addClass("icon icon-check-circle_20 icon-excellent");
            $("#tdAmbientNoise").text(data.roomAnalytics.AmbientNoise.Level.A);

            for (let index = 0; index < data.peripherals.length; index++) {
              $("#tdAmbientTemperature"+index).html(data.peripherals[index].RoomAnalytics.AmbientTemperature);
              $("#tdRelativeHumidity"+index).html(data.peripherals[index].RoomAnalytics.RelativeHumidity);
              $("#tdAirQuality"+index).html(data.peripherals[index].RoomAnalytics.AirQuality.Index);
            }
        }       
      },
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });

  $("#change").click(function () {
    if ($("#control").css("display") == "none") {
      $("#control").css("display", "flex")
      $("#speedBar").css("display", "flex")
      $("#controller-container").css("width", "20rem")
      $("#canvas").css("display", "none")
      $("#zoom").show()
      $("#dezoom").show()
      $("#slider").hide()
    } else {
      $("#control").css("display", "none")
      $("#speedBar").css("display", "none")
      $("#controller-container").css("width", "35rem")
      $("#canvas").css("display", "block")
      $("#zoom").hide()
      $("#dezoom").hide()
      $("#slider").show()
    }
  });

  $("button[id^='zoom']").mousedown(function () {
    //var speed = $("#speed").val();
    console.log("zoom in");
    $.ajax({
      url: '/zoom/In',
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });

  $("button[id^='zoom']").mouseup(function () {
    //var speed = $("#speed").val();
    console.log("stop zoom in");
    $.ajax({
      url: '/stop/Zoom',
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });



  $("button[id^='dezoom']").mousedown(function () {
    //var speed = $("#speed").val();
    console.log("zoom out");
    $.ajax({
      url: '/zoom/Out',
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });

  $("button[id^='dezoom']").mouseup(function () {
    //var speed = $("#speed").val();
    console.log("stop zoom out");
    $.ajax({
      url: '/stop/Zoom',
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });









  $("button[id^='button-center']").click(function () {
    console.log('center');
    $.ajax({
      url: '/center/',
      type: 'get',
      success: 'success',
    });
  });


  $("button[id^='right']").mousedown(function () {
    var speed = $("#speed").val();
    console.log("right");
    $.ajax({
      url: '/right/' + speed,
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });

  $("button[id^='right']").mouseup(function () {
    //var speed = $("#speed").val();
    console.log("stop right");
    $.ajax({
      url: '/stop/Pan',
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });









  $("button[id^='left']").mousedown(function () {
    var speed = $("#speed").val();
    console.log("left");
    $.ajax({
      url: '/left/' + speed,
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });

  $("button[id^='left']").mouseup(function () {
    //var speed = $("#speed").val();
    console.log("stop left");
    $.ajax({
      url: '/stop/Pan',
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });







  $("button[id^='up']").mousedown(function () {
    var speed = $("#speed").val();
    console.log("up");
    $.ajax({
      url: '/up/' + speed,
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });

  $("button[id^='up']").mouseup(function () {
    //var speed = $("#speed").val();
    console.log("stop up");
    $.ajax({
      url: '/stop/Tilt',
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });



  $("button[id^='down']").mousedown(function () {
    var speed = $("#speed").val();
    console.log("down");
    $.ajax({
      url: '/down/' + speed,
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });

  $("button[id^='down']").mouseup(function () {
    //var speed = $("#speed").val();
    console.log("stop up");
    $.ajax({
      url: '/stop/Tilt',
      type: 'get',
      success: 'success',
      error: function (request, status, error) {
        alert(request.responseText);
      }
    });
  });


  // $("button[id^='down']").click(function () {
  //   var speed = $("#speed").val();
  //   console.log("down");
  //   $.ajax({
  //     url: '/down/' + speed,
  //     type: 'get',
  //     success: 'success',
  //     error: function (request, status, error) {
  //       alert(request.responseText);
  //     }
  //   });
  // });

  $('#callWebexNumber button').click(function (e) {
    if ($(this).attr("value") == "startCallWebex" && $("#webexNumber").val().length !== 0) {
      $("#callWebexNumber").attr('action', '/call');
      $(this).hide();
      $('#endCallWebex').css("display", "inline")

    } else if ($(this).attr("value") == "endCallWebex") {
      $("#callWebexNumber").attr('action', '/endCall');
      $(this).hide();
      $('#startCallWebex').show();
    }
  });
</script>

</html>